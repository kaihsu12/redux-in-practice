{"ast":null,"code":"// UNDERSTAND hooks from redux Toolkit\nimport { configureStore } from '@reduxjs/toolkit';\n//IMPORTANT import Slice data from files\nimport counterSlice from './counter';\nimport authSlice from './auth';\n\n//IMPORTANT create store\n//IMPORTANT configureStore - it makes merging multiple reducers into one reducer easier thereafter\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\n\n//IMPORTANT get action method through counterSlice\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","counterSlice","authSlice","store","reducer","counter","auth","counterActions","actions","authActions"],"sources":["/Users/kai/redux-in-practice/src/store/index.js"],"sourcesContent":["// UNDERSTAND hooks from redux Toolkit\nimport { configureStore } from '@reduxjs/toolkit';\n//IMPORTANT import Slice data from files\nimport counterSlice from './counter';\nimport authSlice from './auth';\n\n//IMPORTANT create store\n//IMPORTANT configureStore - it makes merging multiple reducers into one reducer easier thereafter\nconst store = configureStore({\n  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\n});\n\n//IMPORTANT get action method through counterSlice\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\n\nexport default store;\n"],"mappings":"AAAA;AACA,SAASA,cAAc,QAAQ,kBAAkB;AACjD;AACA,OAAOC,YAAY,MAAM,WAAW;AACpC,OAAOC,SAAS,MAAM,QAAQ;;AAE9B;AACA;AACA,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAC3BI,OAAO,EAAE;IAAEC,OAAO,EAAEJ,YAAY,CAACG,OAAO;IAAEE,IAAI,EAAEJ,SAAS,CAACE;EAAQ;AACpE,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMG,cAAc,GAAGN,YAAY,CAACO,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGP,SAAS,CAACM,OAAO;AAE5C,eAAeL,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}