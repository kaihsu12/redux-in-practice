{"ast":null,"code":"//IMPORTANT hooks from redux Toolkit\nimport { createSlice } from '@reduxjs/toolkit';\n\n//UNDERSTAND create an object\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  //IMPORTANT initial state\n  initialState: initialCounterState,\n  // IMPORTANT Reducers(有+s) is an object, a map you could say, of all the reducers this slice needs.\n  reducers: {\n    //IMPORTANT every method here (parameter的那個state) will automatically receive the latest state.\n    //IMPORTANT Redux toolkit internally uses another package called imgur, which will detect code like this and which will automatically clone the existing state, create a new state object, keep all the state which we're not editing, and override the state which we are editing in an immutable way.\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nexport default counterSlice;","map":{"version":3,"names":["createSlice","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter"],"sources":["/Users/kai/redux-in-practice/src/store/counter.js"],"sourcesContent":["//IMPORTANT hooks from redux Toolkit\nimport { createSlice } from '@reduxjs/toolkit';\n\n//UNDERSTAND create an object\nconst initialCounterState = { counter: 0, showCounter: true };\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  //IMPORTANT initial state\n  initialState: initialCounterState,\n  // IMPORTANT Reducers(有+s) is an object, a map you could say, of all the reducers this slice needs.\n  reducers: {\n    //IMPORTANT every method here (parameter的那個state) will automatically receive the latest state.\n    //IMPORTANT Redux toolkit internally uses another package called imgur, which will detect code like this and which will automatically clone the existing state, create a new state object, keep all the state which we're not editing, and override the state which we are editing in an immutable way.\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\nexport default counterSlice;\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAE7D,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,SAAS;EACf;EACAC,YAAY,EAAEL,mBAAmB;EACjC;EACAM,QAAQ,EAAE;IACR;IACA;IACAC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACP,OAAO,EAAE;IACjB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACP,OAAO,EAAE;IACjB,CAAC;IACDS,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,eAAeC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}